# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Nest.js CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

permissions:
  contents: write
  deployments: write

jobs:
  print:
    runs-on: ubuntu-latest
    steps:
      - name: Print context
        run: echo "{{ github }}"
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        npm-version: [7.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint api
        run: npm run lint
  build:
    needs: [lint, test]
    continue-on-error: true
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get repository code
        uses: actions/checkout@v3
      - name: Install node JS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version}}
      - name: Install dependencies
        run: npm ci
      - name: Build api
        run: npm run build
      - name: Deploy
        run: echo Deploying ...
  Release:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [20.x]
        npm-version: [7.18.1]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          show-progress: false
          node-version: ${{ matrix.node-version }}
      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          npm install
      - name: Create release
        run: npm version ${{ matrix.npm-version}}
      - name: Upload version file
        uses: actions/upload-artifact@v3
        with:
          name: test-report-${{ matrix.npm-version }}
          path: ./junit.xml
      - name: Push tag
        run: git push --follow-tags
      - uses: actions/checkout@master
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          WITH_V: true
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
